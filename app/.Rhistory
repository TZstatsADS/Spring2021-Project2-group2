nyc_only$longitude[i] = loc[1]
nyc_only$latitude[i] = loc[2]
nyc_only$location[i] = location(nyc_only[i])
}
nyc_only$location[i] = location(nyc_only[i,])
i=1
nyc_only[i,]
l = (nyc_only[i,]
l = nyc_only[i,]
# new variables
nyc_only$longitude = rep(NA,nrow(nyc_only))
l = nyc_only[i,]
l$Street.Number
l$Street.Name
paste(l$Street.Number, l$Street.Name)
#  no.city = strsplit(address, split = " ")
#  sub.add = no.city[[1]][-length(no.city[[1]])]
#  address2 = sub.add[1]
#  for(i in 2:length(sub.add)){
#    address2 = paste(address2,sub.add[i])
#  }
#  return(address2)
#}
#colnames(nyc_only)
#nyc_only[1,"Street.Name"]
location = function(l){
return(paste(l$Street.Number, l$Street.Name))
}
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[1]
nyc_only$latitude[i] = loc[2]
nyc_only$location[i] = location(nyc_only[i,])
}
head(nyc_only)
strsplit(add,split = " ")
add = paste(l$Street.Number, l$Street.Name)
strsplit(add,split = " ")
length(strsplit(add,split = " "))
length(strsplit(add,split = " ")[[1]])
l$Street.Number
l$Street.Name
length(strsplit(l$Street.Name,split = " ")[[1]])
strsplit(l$Street.Name,split = " ")[[1]]
l = nyc_only[10,]
strsplit(l$Street.Name,split = " ")[[1]]
l = nyc_only[14,]
strsplit(l$Street.Name,split = " ")[[1]]
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
head(retail_stores)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
points = data.frame(retail_stores$latitude, retail_stores$longitude)
points
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp()
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
nyc_only = data.frame(nyc_only)
colnames(nyc_only)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
nyc_only[((nrow(nyc_only)-10):nrow(nyc_only),]
nyc_only[1:3,]
nyc_only[1000:nrow(nyc_only)]
nyc_only[1000:nrow(nyc_only),]
nyc_only[1000::,]
nyc_only[1000:,]
covid = read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/totals//data-by-modzcta.csv")
covid
# subset only number of cases and zip codes
covid_sub = covid[,c("MODIFIED_ZCTA","COVID_CASE_COUNT")]
store_zip_codes = unique(retail_stores$Zip.Code)
covid_zip_codes = unique(covid_sub$MODIFIED_ZCTA)
# filter only NYC stores
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
nyc_only
colSums(is.na(nyc_only))
which(is.na(nyc_only$longitude))
nyc_only[17,]
nyc_only[48,]
nyc_only[76,]
nyc_only = nyc_only[!is.na(nyc_only$longitude)]
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
colSums(is.na(nyc_only))
nyc_only
# loading data sets
retail_stores = read.csv("/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/Retail_Food_Stores.csv")
covid = read_csv("https://raw.githubusercontent.com/nychealth/coronavirus-data/master/totals//data-by-modzcta.csv")
# subset only number of cases and zip codes
covid_sub = covid[,c("MODIFIED_ZCTA","COVID_CASE_COUNT")]
store_zip_codes = unique(retail_stores$Zip.Code)
covid_zip_codes = unique(covid_sub$MODIFIED_ZCTA)
# filter only NYC stores
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
}
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
nyc_only
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
nyc_only
# filter only NYC stores
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
}
nyc_only
# function to extract longitudes and latitudes
long_lat = function(l){
loc = strsplit(l,split="\n")[[1]][3]
long = as.numeric(strsplit(strsplit(loc,split = ",")[[1]][1],split = "\\(")[[1]][2])
lat = as.numeric(strsplit(strsplit(loc,split = ",")[[1]][2],split = "\\)")[[1]][1])
return(c(long,lat))
}
l = nyc_only$Location[1]
address = strsplit(l, split = ",")[[1]][1]
address
# new variables
nyc_only$longitude = rep(NA,nrow(nyc_only))
nyc_only$latitude = rep(NA,nrow(nyc_only))
nyc_only$location = rep(NA,nrow(nyc_only))
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[1]
nyc_only$latitude[i] = loc[2]
nyc_only$location[i] = location(curr_l)
}
# function to clean `Location`
location = function(l){
#curr.address = paste(strsplit(l,split="\n")[[1]][1],strsplit(l,split="\n")[[1]][2])
address = strsplit(l, split = ",")[[1]][1]
#  no.city = strsplit(address, split = " ")
#  sub.add = no.city[[1]][-length(no.city[[1]])]
#  address2 = sub.add[1]
#  for(i in 2:length(sub.add)){
#    address2 = paste(address2,sub.add[i])
#  }
return(address)
}
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[1]
nyc_only$latitude[i] = loc[2]
nyc_only$location[i] = location(curr_l)
}
head(nyc_only)
nyc_only$case_counts = rep(NA,nrow(nyc_only))
#head(nyc_only)
# add case counts to the stores data set `nyc_only`
for (i in 1:length(covid_zip_codes)){
curr.zip = covid_zip_codes[i]
nyc_only[nyc_only$Zip.Code == curr.zip, "case_counts"] = covid_sub[covid_sub$MODIFIED_ZCTA == curr.zip, 2]
}
head(nyc_only)
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
head(nyc_only)
head(nyc_only,3)
tail(nyc_only)
colnames(nyc_only)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
# filter only NYC stores
#nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
#for (i in 2:length(covid_zip_codes)){
#  nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
#}
nyc_only = retail_stores %>%
filter(Zip.Code == covid_zip_codes[1])
# filter only NYC stores
#nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
#for (i in 2:length(covid_zip_codes)){
#  nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
#}
nyc_only = retail_stores %>%
filter(Zip.Code == covid_zip_codes[1])
nyc_only
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
write.csv(nyc_only,"/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/store_nyc.csv",
row.names = FALSE)
#write.csv(nyc_only,"/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/store_nyc.csv",
#          row.names = FALSE)
nyc_only2 = read.csv("store_nyc.csv")
#write.csv(nyc_only,"/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/store_nyc.csv",
#          row.names = FALSE)
nyc_only2 = read.csv("/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/store_nyc.csv")
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
#output$value <- renderPrint({ input$num })
nyc_only = retail_stores %>%
filter(Zip.Code == covid_zip_codes[1])
nyc_only
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
data("quakes")
head(quakes)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
nyc_only
shiny::runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
shiny::runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
write.csv(nyc_only,"/Users/yingyaowu/Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc/store_nyc.csv",
row.names = FALSE)
shiny::runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery2/grocery')
library(leaflet)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery2/grocery')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery2/grocery')
shiny::runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
which.min(nyc_only$case_counts)
ggplot(dd, aes(x=borough, y=count)) +
geom_col(color = 'orange', fill = 'orange') +
labs(title = "Grocery Stores by Borough", y = "Number of Stores", x = "Borough")  +
theme_grey(16)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
nyc_only$case_counts == which.min(nyc_only$case_counts)
which.min(nyc_only$case_counts)
nyc_only[365,]
nyc_only[nyc_only$case_counts == which.min(nyc_only$case_counts),]
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
farmers_market_sub$location = paste(farmers_market_sub$Address.Line.1,farmers_market_sub$City)
head(retail_stores)
colnames(retail_stores)
colnames(farmers_market_sub)
farmers_market_sub
head(farmers_market_sub)
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip")]
colnames(farmers_market_sub)
colnames(retail_stores)
farmers_market_sub = farmers_market[,c("Market.Name","Address.Line.1","City","Zip","Longitude","Latitude")]
farmers_market_sub$location = paste(farmers_market_sub$Address.Line.1,farmers_market_sub$City)
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip")]
farmers_market_sub
colnames(farmers_market_sub)
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip","Longitude","Latitude")]
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip","Longitude","Latitude")]
farmers_market_sub = farmers_market[,c("Market.Name","Address.Line.1","City","Zip","Longitude","Latitude")]
farmers_market_sub
colnames(farmers_market_sub)
farmers_market_sub$location = paste(farmers_market_sub$Address.Line.1,farmers_market_sub$City)
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip","Longitude","Latitude")]
colnames(farmers_market_sub)
# subset only number of cases and zip codes
#covid_sub = covid[,c("MODIFIED_ZCTA","COVID_CASE_COUNT")]
store_zip_codes = unique(retail_stores$Zip.Code)
covid_zip_codes = unique(covid$MODIFIED_ZCTA)
# filter only NYC stores
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
}
loc = strsplit(l,split="\n")[[1]][3]
return(strsplit(l, split = ",")[[1]][1])
nyc_only$longitude = rep(NA,nrow(nyc_only))
nyc_only$latitude = rep(NA,nrow(nyc_only))
nyc_only$location = rep(NA,nrow(nyc_only))
nyc_only$case_counts = rep(NA,nrow(nyc_only))
nyc_only$neighborhood = rep(NA,nrow(nyc_only))
nyc_only$borough = rep(NA,nrow(nyc_only))
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[2]
nyc_only$latitude[i] = loc[1]
nyc_only$location[i] = location(curr_l)
}
nyc_only
colnames(nyc_only)
nyc_only2 = nyc_only[,c("Entity.Name","location","Zip.Code","longitude","latitude")]
colnames(nyc_only2)
colnames(farmers_market_sub)
colnames(farmers_market_sub) = colnames(nyc_only2)
colnames(farmers_market_sub)
nyc_only = cbind(nyc_only,farmers_market_sub)
nyc_only = cbind(nyc_only2,farmers_market_sub)
dim(nyc_only2)
dim(farmers_market_sub)
nyc_only = rbind(nyc_only2,farmers_market_sub)
nyc_only$case_counts = rep(NA,nrow(nyc_only))
nyc_only$neighborhood = rep(NA,nrow(nyc_only))
nyc_only$borough = rep(NA,nrow(nyc_only))
# add case counts to the stores data set `nyc_only`
for (i in 1:length(covid_zip_codes)){
curr.zip = covid_zip_codes[i]
nyc_only[nyc_only$Zip.Code == curr.zip, "case_counts"] = covid[covid$MODIFIED_ZCTA == curr.zip, "COVID_CASE_COUNT"]
nyc_only[nyc_only$Zip.Code == curr.zip, "neighborhood"] = covid[covid$MODIFIED_ZCTA == curr.zip, "NEIGHBORHOOD_NAME"]
nyc_only[nyc_only$Zip.Code == curr.zip, "borough"] = covid[covid$MODIFIED_ZCTA == curr.zip, "BOROUGH_GROUP"]
}
colSums(is.na(nyc_only))
which(is.na(nyc_only$location))
nyc_only[17,]
colSums(is.na(nyc_only))
which(is.na(nyc_only$Zip.Code))
nyc_only[13652,]
## clean missing values
nyc_only = nyc_only[-13652,]
colSums(is.na(nyc_only))
# add case counts to the stores data set `nyc_only`
for (i in 1:length(covid_zip_codes)){
curr.zip = covid_zip_codes[i]
nyc_only[nyc_only$Zip.Code == curr.zip, "case_counts"] = covid[covid$MODIFIED_ZCTA == curr.zip, "COVID_CASE_COUNT"]
nyc_only[nyc_only$Zip.Code == curr.zip, "neighborhood"] = covid[covid$MODIFIED_ZCTA == curr.zip, "NEIGHBORHOOD_NAME"]
nyc_only[nyc_only$Zip.Code == curr.zip, "borough"] = covid[covid$MODIFIED_ZCTA == curr.zip, "BOROUGH_GROUP"]
}
nyc_only$case_counts = as.integer(nyc_only$case_counts)
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
nyc_zip_codes = unique(nyc_only$Zip.Code)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
colSums(is.na(nyc_only))
colSums(is.na(nyc_only))
nyc_only = rbind(nyc_only2,farmers_market_sub)
dim(nyc_only)
#which(is.na(nyc_only$Zip.Code))
#nyc_only[13652,]
## clean missing values
nyc_only = nyc_only[-13652,]
dim(nyc_only)
colSums(is.na(nyc_only))
which(is.na(nyc_only$location))
nyc_only[17,]
dim(nyc_only)
nyc_only = nyc_only[!is.na(nyc_only$location)]
nyc_only = nyc_only[!is.na(nyc_only$location),]
dim(nyc_only)
nyc_only$case_counts = rep(NA,nrow(nyc_only))
nyc_only$neighborhood = rep(NA,nrow(nyc_only))
nyc_only$borough = rep(NA,nrow(nyc_only))
# add case counts to the stores data set `nyc_only`
for (i in 1:length(covid_zip_codes)){
curr.zip = covid_zip_codes[i]
nyc_only[nyc_only$Zip.Code == curr.zip, "case_counts"] = covid[covid$MODIFIED_ZCTA == curr.zip, "COVID_CASE_COUNT"]
nyc_only[nyc_only$Zip.Code == curr.zip, "neighborhood"] = covid[covid$MODIFIED_ZCTA == curr.zip, "NEIGHBORHOOD_NAME"]
nyc_only[nyc_only$Zip.Code == curr.zip, "borough"] = covid[covid$MODIFIED_ZCTA == curr.zip, "BOROUGH_GROUP"]
}
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
nyc_only = rbind(nyc_only, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[1],])
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
nyc_only = rbind(nyc_only, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[i],])
}
nyc_only2 = nyc_only[,c("Entity.Name","location","Zip.Code","longitude","latitude")]
# filter only NYC stores
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
}
nyc_only$longitude = rep(NA,nrow(nyc_only))
nyc_only$latitude = rep(NA,nrow(nyc_only))
nyc_only$location = rep(NA,nrow(nyc_only))
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[2]
nyc_only$latitude[i] = loc[1]
nyc_only$location[i] = location(curr_l)
}
nyc_only2 = nyc_only[,c("Entity.Name","location","Zip.Code","longitude","latitude")]
colnames(farmers_market_sub) = colnames(nyc_only2)
nyc_only = rbind(nyc_only, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[1],])
nyc_only = rbind(nyc_only2, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[1],])
for (i in 2:length(covid_zip_codes)){
nyc_only2 = rbind(nyc_only2, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[i],])
}
colSums(is.na(nyc_only2))
which(is.na(nyc_only$Entity.Name))
nyc_only = nyc_only2[!is.na(nyc_only2$Entity.Name),]
which(is.na(nyc_only2$Entity.Name))
colSums(is.na(nyc_only2))
## clean missing values
nyc_only = nyc_only2[!is.na(nyc_only2$Entity.Name),]
colSums(is.na(nyc_only))
nyc_only = nyc_only[!is.na(nyc_only$location),]
colSums(is.na(nyc_only))
which(is.na(nyc_only2$longitude))
colSums(farmers_market_sub)
colSums(is.na(farmers_market_sub))
which(is.na(farmers_market_sub$Zip.Code))
farmers_market_sub = farmers_market_sub[-61,]
nyc_only = retail_stores[retail_stores$Zip.Code == covid_zip_codes[1],]
for (i in 2:length(covid_zip_codes)){
nyc_only = rbind(nyc_only, retail_stores[retail_stores$Zip.Code == covid_zip_codes[i],])
}
nyc_only$longitude = rep(NA,nrow(nyc_only))
nyc_only$latitude = rep(NA,nrow(nyc_only))
nyc_only$location = rep(NA,nrow(nyc_only))
# assign values to new variables
for(i in 1:nrow(nyc_only)){
curr_l = nyc_only$Location[i]
loc = long_lat(curr_l)
nyc_only$longitude[i] = loc[2]
nyc_only$latitude[i] = loc[1]
nyc_only$location[i] = location(curr_l)
}
nyc_only2 = nyc_only[,c("Entity.Name","location","Zip.Code","longitude","latitude")]
colnames(farmers_market_sub) = colnames(nyc_only2)
colSums(is.na(farmers_market_sub))
farmers_market_sub = farmers_market[,c("Market.Name","Address.Line.1","City","Zip","Longitude","Latitude")]
farmers_market_sub$location = paste(farmers_market_sub$Address.Line.1,farmers_market_sub$City)
farmers_market_sub = farmers_market_sub[,c("Market.Name","location","Zip","Longitude","Latitude")]
colSums(is.na(farmers_market_sub))
farmers_market_sub = farmers_market_sub[-is.na(farmers_market_sub$Zip.Code),]
colSums(is.na(farmers_market_sub))
nyc_only2 = rbind(nyc_only2, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[1],])
for (i in 2:length(covid_zip_codes)){
nyc_only2 = rbind(nyc_only2, farmers_market_sub[farmers_market_sub$Zip.Code == covid_zip_codes[i],])
}
colSums(is.na(nyc_only2))
which(is.na(nyc_only2$location))
nyc_only2[17,]
colSums(is.na(nyc_only2))
## clean missing values
nyc_only2 = nyc_only2[!is.na(nyc_only2$location),]
colSums(is.na(nyc_only2))
which(is.na(nyc_only2$longitude))
nyc_only2[11424,]
nyc_only2 = nyc_only2[!is.na(nyc_only2$longitude),]
colSums(is.na(nyc_only2))
nyc_only = nyc_only2
dim(nyc_only)
nyc_only$case_counts = rep(NA,nrow(nyc_only))
nyc_only$neighborhood = rep(NA,nrow(nyc_only))
nyc_only$borough = rep(NA,nrow(nyc_only))
# add case counts to the stores data set `nyc_only`
for (i in 1:length(covid_zip_codes)){
curr.zip = covid_zip_codes[i]
nyc_only[nyc_only$Zip.Code == curr.zip, "case_counts"] = covid[covid$MODIFIED_ZCTA == curr.zip, "COVID_CASE_COUNT"]
nyc_only[nyc_only$Zip.Code == curr.zip, "neighborhood"] = covid[covid$MODIFIED_ZCTA == curr.zip, "NEIGHBORHOOD_NAME"]
nyc_only[nyc_only$Zip.Code == curr.zip, "borough"] = covid[covid$MODIFIED_ZCTA == curr.zip, "BOROUGH_GROUP"]
}
nyc_only$case_counts = as.integer(nyc_only$case_counts)
nyc_only = nyc_only[!is.na(nyc_only$longitude),]
nyc_zip_codes = unique(nyc_only$Zip.Code)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
leaflet(nyc_only[nyc_only$Zip.Code == input$`Zip Code`, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
leaflet(nyc_only[nyc_only$Zip.Code == input$`Zip Code`, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
input = 10001
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
leaflet(nyc_only[nyc_only$Zip.Code == input$`Zip Code`, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
popup_features = paste('Store Name:', nyc_only$Entity.Name, '</br>',
'Neighborhood:',nyc_only$neighborhood, '</br>',
'Current Confirmed Cases:',nyc_only$case_counts,'</br>')
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
input=10002
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
input=11221
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features) %>% addPolygons(data = nyc_only[nyc_only$Zip.Code == input, ],color = "blue", weight = 5, fill = FALSE)
load("/Users/yingyaowu/Downloads/US_zipcode.RData")
leaflet(nyc_only[nyc_only$Zip.Code == input, ]) %>%
addProviderTiles(providers$CartoDB.Positron) %>% addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features) %>%  addPolygons(data = US_zipcode[US_zipcode$GEOID10 == input, ],  color = "red", weight = 5, fill = FALSE)
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
leaflet(nyc_only) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(~longitude, ~latitude, clusterOptions = markerClusterOptions(), popup = popup_features)
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
?write.csv
runApp('Desktop/Spring2021/5243 Applied Data Science/Project 2/grocery_nyc')
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp()
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
# default: all stores in NYC
best_zip_all = nyc_only[which.min(nyc_only$case_counts),"Zip.Code"]
best_zip_all
nyc_only %>%
select(Entity.Name,location,neighborhood,Zip.Code,case_counts) %>%
filter(Zip.Code == best_zip_all)
runApp('Desktop/Spring2021/5243 Applied Data Science/Spring2021-Project2-group2/app')
runApp('Desktop/Spring2021/Spring2021-Project2-group2/app')
#case count, testing rate, and death information by age
ana_age<-read.csv("../output/age_ana/ana_age.csv")
farmers_market = read.csv("../output/Farmers__Markets_in_New_York_State.csv")
farmers_market = read.csv("output/Farmers__Markets_in_New_York_State.csv")
setwd("/Users/yingyaowu/Desktop/Spring2021/Spring2021-Project2-group2/app")
farmers_market = read.csv("../output/Farmers__Markets_in_New_York_State.csv")
#case count, testing rate, and death information by age
ana_age<-read.csv("../output/age_ana/ana_age.csv")
#case count, testing rate, and death information by age
ana_age<-read.csv("output/age_ana/ana_age.csv")
ana_death<-read.csv("output/age_ana/ana_death.csv")
runApp()
#case count, testing rate, and death information by age
ana_age<-read.csv("./output/age_ana/ana_age.csv")
runApp()
runApp()
img(src = '../doc/figs/header.png', width = '100%')
runApp()
runApp()
